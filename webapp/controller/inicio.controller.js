sap.ui.define([
	"cmpc/controller/BaseController",
	"sap/ui/model/json/JSONModel",
	"sap/ui/Device"
], function(BaseController, JSONModel, Device) {
	"use strict";
	return BaseController.extend("cmpc.controller.inicio", {
		_VariantJSON: [],
		_VariantModel: {},
		_oTable: {},
		_LastState: {},
		_Device: Device,
		_FinishedRes: {},
		_Finished: {},
		/**
		 * Called when a controller is instantiated and its View controls (if available) are already created.
		 * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
		 * @memberOf cmpc.view.view.inicio
		 */
		onInit: function() {
			//
			var sServiceUrl = "/sap/opu/odata/sap/ZHAS_SERV_SRV";
			// ODATA URL
			var oDModel = new sap.ui.model.odata.v2.ODataModel(sServiceUrl, true);
			oDModel.setUseBatch(false);
			oDModel.setDefaultCountMode(sap.ui.model.odata.CountMode.None);
			oDModel.setDefaultBindingMode(sap.ui.model.BindingMode.OneWay);
			// Se insertan los datos a la tabla de log con los datos seleccionados
			var oTable = this.byId("table_res");
			oTable.setModel(oDModel); //oTable.getBinding("items");

			this._oTable = this.byId("table_res");
			this.init(this._oTable);
		},
		/**
		 *@memberOf cmpc.controller.inicio
		 */
		onpress: function(oEvent) {
			//This code was generated by the layout editor.
			// The source is the list item that got pressed
			//this._showObject(oEvent.getSource());
			//var oRouter = sap.ui.core.UIComponent.getRouterFor(this);
			//oRouter.navTo("lista");
			//this.getRouter().getTargets().display("lista");
			var oItem, oCtx;
			oItem = oEvent.getSource();
			oCtx = oItem.getBindingContext();
			this.getRouter().navTo("lista", {
				COD_LIB: oCtx.getProperty("COD_LIB")
			});
		},
		/**
		 *@memberOf cmpc.controller.inicio
		 */
		backbutton: function() {
			//This code was generated by the layout editor.
			history.go(-1);
		},
		/**
		 *@memberOf cmpc.controller.inicio
		 */
		onsave: function() {
			//This code was generated by the layout editor.

			/*			var oModel = this.getView().getModel();
						var table = this.getView().byId("table");
						var rowItems = table.getSelectedItems();
						
						//	debugger;
						var afilters = new Array();
						for (var i = 0; i < rowItems.length; i++) {
						var titular = oModel.getProperty("CANTIDAD", rowItems[i].getBindingContext());
						//	if (rowItems[i].getSelected()) {
							if (titular == "X" ) {
								var filterdoc = new sap.ui.model.Filter("TPO_DOC", sap.ui.model.FilterOperator.EQ, oModel.getProperty("TPO_DOC", rowItems[i].getBindingContext()));
								afilters.push(filterdoc);
								var filtercod = new sap.ui.model.Filter("COD_LIB", sap.ui.model.FilterOperator.EQ, oModel.getProperty("COD_LIB", rowItems[i].getBindingContext()));
								afilters.push(filtercod);
								var filtercant = new sap.ui.model.Filter("CANTIDAD", sap.ui.model.FilterOperator.EQ, oModel.getProperty("CANTIDAD", rowItems[i].getBindingContext()));
								afilters.push(filtercant);					
							}
						}
						// Se realizada el llamado a la entidad la cual est  seteada directamente el la vista xml ( TiHasReleaseSet)
						var sServiceUrl = "/sap/opu/odata/sap/ZHAS_SERV_SRV";
						// ODATA URL
						var oDModel = new sap.ui.model.odata.v2.ODataModel(sServiceUrl, true);
						oDModel.setUseBatch(false);
						oDModel.setDefaultCountMode(sap.ui.model.odata.CountMode.None);
						oDModel.setDefaultBindingMode(sap.ui.model.BindingMode.OneWay);*/

		},

		init: function(oTable) {
			//	debugger;

			this._oTable = oTable;
			this._Finished = new Promise(function(resolve) {
				this._FinishedRes = resolve;
			}.bind(this));

			var sSystem = this.checkSystem();
			var aColumns = oTable.getColumns();
			for (var i = 0; i < aColumns.length; i++) {

				var sText = aColumns[i].getHeader().getText();
				//	var aCustomData = aColumns[i].getCustomData();

				//	if (!sText) {

				//	}
//debugger;
				if (sSystem === "Phone") {

					sText = this.getCustomDataVar(aColumns[i], "TextoVar");
					aColumns[i].getHeader().setText(sText);
					var grupo = this.getCustomDataVar(aColumns[i], "Group");

					//Si es falso se oculta la columna				
					if (grupo === "F") {

						aColumns[i].setVisible(false);
					}
				}
			}

			/*			this._VariantModel = new JSONModel(this._VariantJSON);
						this._VariantModel.setDefaultBindingMode("TwoWay");*/

			//.updateTableBinding();
		},

		getVariantJSON: function() {
			return this._VariantJSON;
		},
		getVariantModel: function(oModel) {
			return this._VariantModel;

		},

		updateTableBinding: function() {

			//	debugger;

			var aColumns = this._oTable.getColumns();
			for (var i = 0; i < aColumns.length; i++) {
				var sPath = "Variante>/" + i + "/Visible";
				aColumns[i].bindProperty("visible", sPath);

			}
			this._FinishedRes();

		},

		setLastState: function() {
			this._LastState = JSON.parse(JSON.stringify(this._VariantJSON));

		},
		refreshLastState: function() {
			this._VariantJSON = JSON.parse(JSON.stringify(this._LastState));
			this._VariantModel.setData(this._VariantJSON);

		},
		checkDefault: function(oColumn) {
			var aCustomData = oColumn.getCustomData();
			var sSystem = this.checkSystem();
			var bDefault = false;
			for (var i = 0; i < aCustomData.length; i++) {
				if (aCustomData[i].getKey() === sSystem && aCustomData[i].getValue() === "true") {
					bDefault = true;
				}
			}
			return bDefault;
		},
		checkSystem: function() {
			switch (true) {
				case this._Device.system.desktop:
					return "Desktop";

				case this._Device.system.phone:
					return "Phone";

				case this._Device.system.tablet:
					return "Tablet";

			}
		},
		getCustomDataVar: function(oControl, sVar) {

			var aCustom = oControl.getCustomData().filter(function(oCustoms) {
				return oCustoms.getKey() === sVar;
			});
			if (aCustom.length > 0) {
				return aCustom[0].getValue();
			} else {
				return "";
			}
		}
	});
});